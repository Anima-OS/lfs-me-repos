pkgbuild_version=5
pkgname=shadow
pkgver=4.2.1

overwrite=(
	'/etc/pam.d/other'
)
dependencies=(
    "!$pkgname"
	'Linux-PAM'
)
sources=(
	"http://pkg-shadow.alioth.debian.org/releases/${pkgname}-${pkgver}.tar.xz"
)
sha1sums=(
	0917cbadd4ce0c7c36670e5ecd37bbed92e6d82d
)

lfs_me_prepare() {
	tar -xf "${sources_dir}/${pkgname}-${pkgver}.tar.xz" -C "$build_dir"

	cd "${build_dir}/${pkgname}-${pkgver}"

	sed -i 's/groups$(EXEEXT) //' src/Makefile.in &&
	find man -name Makefile.in -exec sed -i 's/groups\.1 / /' {} \; &&

	sed -i -e 's@#ENCRYPT_METHOD DES@ENCRYPT_METHOD SHA512@' \
	       -e 's@/var/spool/mail@/var/mail@' etc/login.defs &&

   sed -i 's/1000/999/' etc/useradd &&

   ./configure --sysconfdir=/etc --with-group-name-max-length=32
}

lfs_me_build() {
	cd "${build_dir}/${pkgname}-${pkgver}"
	make &&

	cat > system-account << "EOF"
# Begin /etc/pam.d/system-account

account   required    pam_unix.so

# End /etc/pam.d/system-account
EOF

	cat > system-auth << "EOF"
# Begin /etc/pam.d/system-auth

auth      required    pam_unix.so

# End /etc/pam.d/system-auth
EOF

	#for configuration without cracklib
	cat > system-password << "EOF"
# Begin /etc/pam.d/system-password

# use sha512 hash for encryption, use shadow, and try to use any previously
# defined authentication token (chosen password) set by any prior module
password  required    pam_unix.so       sha512 shadow try_first_pass

# End /etc/pam.d/system-password
EOF

	cat > system-session << "EOF"
# Begin /etc/pam.d/system-session

session   required    pam_unix.so

# End /etc/pam.d/system-session
EOF

	cat > login << "EOF"
# Begin /etc/pam.d/login

# Set failure delay before next prompt to 3 seconds
auth      optional    pam_faildelay.so  delay=3000000

# Check to make sure that the user is allowed to login
auth      requisite   pam_nologin.so

# Check to make sure that root is allowed to login
# Disabled by default. You will need to create /etc/securetty
# file for this module to function. See man 5 securetty.
#auth      required    pam_securetty.so

# Additional group memberships - disabled by default
#auth      optional    pam_group.so

# include the default auth settings
auth      include     system-auth

# check access for the user
account   required    pam_access.so

# include the default account settings
account   include     system-account

# Set default environment variables for the user
session   required    pam_env.so

# Set resource limits for the user
session   required    pam_limits.so

# Display date of last login - Disabled by default
#session   optional    pam_lastlog.so

# Display the message of the day - Disabled by default
#session   optional    pam_motd.so

# Check user's mail - Disabled by default
#session   optional    pam_mail.so      standard quiet

# include the default session and password settings
session   include     system-session
password  include     system-password

# End /etc/pam.d/login
EOF

	cat > passwd << "EOF"
# Begin /etc/pam.d/passwd

password  include     system-password

# End /etc/pam.d/passwd
EOF

	cat > su << "EOF"
# Begin /etc/pam.d/su

# always allow root
auth      sufficient  pam_rootok.so
auth      include     system-auth

# include the default account settings
account   include     system-account

# Set default environment variables for the service user
session   required    pam_env.so

# include system session defaults
session   include     system-session

# End /etc/pam.d/su
EOF

	cat > chage << "EOF"
#Begin /etc/pam.d/chage

# always allow root
auth      sufficient  pam_rootok.so

# include system defaults for auth account and session
auth      include     system-auth
account   include     system-account
session   include     system-session

# Always permit for authentication updates
password  required    pam_permit.so

# End /etc/pam.d/chage
EOF

	cat > other << "EOF"
# Begin /etc/pam.d/other

auth        required        pam_warn.so
auth        required        pam_deny.so
account     required        pam_warn.so
account     required        pam_deny.so
password    required        pam_warn.so
password    required        pam_deny.so
session     required        pam_warn.so
session     required        pam_deny.so

# End /etc/pam.d/other
EOF
}

lfs_me_check() {
	return
}

lfs_me_install() {
	cd "${build_dir}/${pkgname}-${pkgver}"
	make DESTDIR="$fakeroot_dir" install &&

	#configure /etc/login.defs for PAM
	install -v -m644 "${fakeroot_dir}/etc/login.defs" "${fakeroot_dir}/etc/login.defs.orig" &&
	for FUNCTION in FAIL_DELAY               \
		FAILLOG_ENAB             \
		LASTLOG_ENAB             \
		MAIL_CHECK_ENAB          \
		OBSCURE_CHECKS_ENAB      \
		PORTTIME_CHECKS_ENAB     \
		QUOTAS_ENAB              \
		CONSOLE MOTD_FILE        \
		FTMP_FILE NOLOGINS_FILE  \
		ENV_HZ PASS_MIN_LEN      \
		SU_WHEEL_ONLY            \
		CRACKLIB_DICTPATH        \
		PASS_CHANGE_TRIES        \
		PASS_ALWAYS_WARN         \
		CHFN_AUTH ENCRYPT_METHOD \
		ENVIRON_FILE
	do
		sed -i "s/^${FUNCTION}/# &/" "${fakeroot_dir}/etc/login.defs"
	done &&

	install -v -m 755 -d "${fakeroot_dir}/etc/pam.d"

	install -v -m 644 system-account system-auth system-password system-session login passwd su chage other "${fakeroot_dir}/etc/pam.d/"

	for PROGRAM in chfn chgpasswd chpasswd chsh groupadd groupdel \
		groupmems groupmod newusers useradd userdel usermod
	do
		install -v -m644 "${fakeroot_dir}/etc/pam.d/chage" "${fakeroot_dir}/etc/pam.d/${PROGRAM}"
		sed -i "s/chage/$PROGRAM/" "${fakeroot_dir}/etc/pam.d/${PROGRAM}"
	done
}

lfs_me_postinstall() {
	[ -f /etc/login.access ] && mv -v /etc/login.access{,.NOUSE}
	[ -f /etc/limits ] && mv -v /etc/limits{,.NOUSE}
}

lfs_me_postremove() {
	[ -f /etc/login.access ] && mv -v /etc/login.access{.NOUSE,}
	[ -f /etc/limits ] && mv -v /etc/limits{.NOUSE,}
}

# vim:set ts=4 syntax=sh:
